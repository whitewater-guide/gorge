name: Release
on:
  push:
  pull_request:
    branches:
      - master
env:
  GITHUB_USER: ww-github
  REGISTRY: ghcr.io
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SHOULD_RELEASE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            timezone.msgpack.snap.db
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Verify
        run: |
          make test
          make lint

      - name: Prepare release
        run: make release

      - name: Semantic release
        if: ${{ env.SHOULD_RELEASE }}
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up docker buildx
        if: ${{ env.SHOULD_RELEASE }}
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: ${{ env.SHOULD_RELEASE }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.GITHUB_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        if: $${{ env.SHOULD_RELEASE && steps.semantic.outputs.new_release_published == 'true' }}
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.semantic.outputs.new_release_version }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
