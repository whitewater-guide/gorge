name: Release
on:
  push:
  pull_request:
    branches:
      - master
env:
  REGISTRY: ghcr.io
  CI: true
jobs:
  build:
    name: Build
    # it's important to use this version of ubuntu, because it matches development docker image and has correct veriosn of libproj
    runs-on: ubuntu-22.04
    env:
      # beta branch is used for prereleases, as described in https://semantic-release.gitbook.io/semantic-release/usage/configuration#branches
      PUBLISH_RELEASE: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta') }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Restore cached libproj
        id: cache-libproj-restore
        uses: actions/cache/restore@v3
        with:
          path: proj
          key: ${{ runner.os }}-libproj

      - name: Build libproj 8.2.1 (ubuntu 22.04)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cmake libsqlite3-dev sqlite3
          sudo ./build-proj.sh

      - name: Save libproj cache
        id: cache-libproj-save
        uses: actions/cache/save@v3
        with:
          path: proj
          key: ${{ steps.cache-libproj-restore.outputs.cache-primary-key }}

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Verify
        run: |
          make test
          make lint

      - name: Prepare release
        run: make release

      - name: Semantic release
        id: semantic
        if: ${{ env.PUBLISH_RELEASE == 'true' }}
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up docker buildx
        if: ${{ env.PUBLISH_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ env.PUBLISH_RELEASE == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        if: ${{ env.PUBLISH_RELEASE == 'true' && steps.semantic.outputs.new_release_published == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.semantic.outputs.new_release_version}}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
